---
import BaseHead from "./BaseHead.astro";
import NavListItem from "@components/NavListItem.astro";
import "@styles/Nuggets.css";
import GoogleAnalytics from "@components/GoogleAnalytics.astro";

import pageSize from "src/config.js";
import config from "src/config.js";
export interface Props {
  title: string;
  description?: string;
  activeLink?: string;
  keywords?: string[];
  image?: string;
}

const {
  title,
  description = "Here, I share my experiences and projects as a software developer, with a focus on web development, data engineering, and DevOps. Join me as we delve into the latest trends and techniques and have some fun along the way.",
  activeLink = null,
  keywords = ["blog, astro, javascript, typescript"],
  image = "/images/bf.png",
} = Astro.props as Props;
const { navLinks } = pageSize;
const {
  metaData: { authorName },
} = config;
---

<html lang="en">
  <head>
    <BaseHead
      title={title}
      description={description}
      cKeywords={keywords}
      image={image}
    />
    <GoogleAnalytics />
  </head>

  <body>
    <a
      href="#main"
      class="absolute bg-info text-info-content px-6 py-2 rounded-br-md translate-x-[-100%] focus-within:translate-x-0 transition-all"
      >Skip navigation</a
    >
    <header class="container mx-auto flex items-center justify-between mb-16">
      <div class="p-4">
        <!-- Logo -->
        <svg
          width="143.623"
          height="40.097"
          viewBox="0 0 143.623 40.097"
          xmlns="http://www.w3.org/2000/svg"
          ><g
            id="svgGroup"
            stroke-linecap="round"
            fill-rule="evenodd"
            font-size="9pt"
            stroke="#b34b4b00"
            stroke-width="0.25mm"
            fill="#09c9a3"
            style="stroke:#b34b4b00;stroke-width:0.25mm;fill:#09c9a3"
            ><path
              d="M 4.861 21.377 L 4.861 39.612 L 0 39.612 L 0 2.256 L 4.861 2.256 L 4.861 21.001 L 18.557 2.256 L 23.606 2.256 L 10.071 20.786 L 24.788 39.612 L 19.121 39.612 L 4.861 21.377 Z M 111.477 39.612 L 111.477 25.996 Q 111.477 17.375 105.3 17.375 Q 103.716 17.375 102.4 18.235 A 6.918 6.918 0 0 0 100.551 20.007 Q 99.981 20.787 99.523 21.787 A 13.33 13.33 0 0 0 99.231 22.478 Q 98.882 23.362 98.835 23.924 A 2.003 2.003 0 0 0 98.828 24.089 L 98.828 39.612 L 94.504 39.612 L 94.504 0 L 98.828 0 L 98.828 19.041 A 9.998 9.998 0 0 1 100.714 16.268 Q 102.761 14.193 105.907 13.966 A 10.968 10.968 0 0 1 106.697 13.938 A 8.512 8.512 0 0 1 109.156 14.284 A 7.515 7.515 0 0 1 110.658 14.918 Q 112.121 15.734 113.055 16.651 A 7.197 7.197 0 0 1 113.411 17.026 A 8.748 8.748 0 0 1 115.276 20.458 Q 115.669 21.794 115.768 23.395 A 17.882 17.882 0 0 1 115.801 24.492 L 115.801 39.612 L 111.477 39.612 Z M 46.46 35.046 L 47.615 38.135 A 10.42 10.42 0 0 1 44.567 39.509 Q 43.194 39.894 41.559 40.026 A 22.171 22.171 0 0 1 39.773 40.095 Q 34.554 40.095 31.335 37.611 A 10.438 10.438 0 0 1 30.132 36.523 A 12.057 12.057 0 0 1 27.078 30.495 A 17.433 17.433 0 0 1 26.748 27.017 Q 26.748 21.279 29.512 17.891 A 10.832 10.832 0 0 1 31.77 15.818 A 10.911 10.911 0 0 1 38 13.938 A 12.468 12.468 0 0 1 41.317 14.354 A 8.694 8.694 0 0 1 46.057 17.537 A 11.618 11.618 0 0 1 47.905 21.364 Q 48.35 22.931 48.483 24.779 A 21.768 21.768 0 0 1 48.528 25.647 L 47.883 27.258 L 31.072 27.258 A 13.868 13.868 0 0 0 31.365 30.028 Q 31.727 31.697 32.533 32.978 A 7.622 7.622 0 0 0 33.462 34.174 A 7.773 7.773 0 0 0 38.147 36.526 A 10.957 10.957 0 0 0 39.692 36.631 A 13.413 13.413 0 0 0 42.338 36.349 Q 43.596 36.095 44.978 35.614 A 27.178 27.178 0 0 0 46.46 35.046 Z M 141.555 35.046 L 142.71 38.135 A 10.42 10.42 0 0 1 139.662 39.509 Q 138.29 39.894 136.654 40.026 A 22.171 22.171 0 0 1 134.868 40.095 Q 129.65 40.095 126.43 37.611 A 10.438 10.438 0 0 1 125.227 36.523 A 12.057 12.057 0 0 1 122.174 30.495 A 17.433 17.433 0 0 1 121.843 27.017 Q 121.843 21.279 124.607 17.891 A 10.832 10.832 0 0 1 126.865 15.818 A 10.911 10.911 0 0 1 133.096 13.938 A 12.468 12.468 0 0 1 136.412 14.354 A 8.694 8.694 0 0 1 141.152 17.537 A 11.618 11.618 0 0 1 143 21.364 Q 143.445 22.931 143.578 24.779 A 21.768 21.768 0 0 1 143.623 25.647 L 142.979 27.258 L 126.167 27.258 A 13.868 13.868 0 0 0 126.461 30.028 Q 126.823 31.697 127.628 32.978 A 7.622 7.622 0 0 0 128.557 34.174 A 7.773 7.773 0 0 0 133.242 36.526 A 10.957 10.957 0 0 0 134.788 36.631 A 13.413 13.413 0 0 0 137.433 36.349 Q 138.691 36.095 140.073 35.614 A 27.178 27.178 0 0 0 141.555 35.046 Z M 80.835 36.631 L 80.996 36.631 A 9.554 9.554 0 0 0 85.573 35.437 A 12.537 12.537 0 0 0 87.039 34.509 L 88.704 37.41 Q 87.213 38.504 85.948 39.108 A 9.411 9.411 0 0 1 84.917 39.531 A 8.128 8.128 0 0 1 83.779 39.816 Q 82.595 40.033 80.905 40.081 A 35.415 35.415 0 0 1 79.895 40.095 A 13.841 13.841 0 0 1 76.069 39.593 A 10.411 10.411 0 0 1 71.127 36.523 A 12.118 12.118 0 0 1 68.309 30.977 A 17.753 17.753 0 0 1 67.891 27.017 Q 67.891 21.082 71.127 17.51 A 10.668 10.668 0 0 1 77.742 14.085 A 15.18 15.18 0 0 1 79.895 13.938 A 32.046 32.046 0 0 1 81.649 13.983 Q 83.72 14.097 84.917 14.502 A 9.889 9.889 0 0 1 86.23 15.065 Q 86.876 15.394 87.578 15.846 A 22.422 22.422 0 0 1 88.704 16.624 L 87.039 19.524 A 11.598 11.598 0 0 0 84.313 18.019 A 9.274 9.274 0 0 0 80.996 17.402 L 80.835 17.402 A 8.8 8.8 0 0 0 77.857 17.886 A 7.535 7.535 0 0 0 74.564 20.222 A 10.104 10.104 0 0 0 72.235 26.282 A 12.921 12.921 0 0 0 72.214 27.017 A 11.205 11.205 0 0 0 72.802 30.703 A 9.852 9.852 0 0 0 74.564 33.811 A 7.618 7.618 0 0 0 80.114 36.606 A 10.321 10.321 0 0 0 80.835 36.631 Z M 54.731 33.005 L 54.731 0 L 59.055 0 L 59.055 32.737 A 8.241 8.241 0 0 0 59.116 33.78 Q 59.261 34.909 59.747 35.551 A 2.202 2.202 0 0 0 59.874 35.704 Q 60.592 36.492 61.216 36.59 A 1.131 1.131 0 0 0 61.392 36.604 Q 61.962 36.604 63.643 36.461 A 145.583 145.583 0 0 0 64.453 36.389 L 64.802 39.531 Q 62.117 40.095 60.317 40.095 Q 54.731 40.095 54.731 33.005 Z M 31.26 24.036 L 44.285 24.036 A 10.634 10.634 0 0 0 43.868 21.791 A 7.638 7.638 0 0 0 42.539 19.229 Q 41.008 17.375 38.538 17.375 A 9.83 9.83 0 0 0 36.388 17.596 Q 34.944 17.92 33.896 18.719 A 5.666 5.666 0 0 0 32.952 19.631 A 6.478 6.478 0 0 0 31.993 21.241 Q 31.676 21.987 31.469 22.892 A 13.759 13.759 0 0 0 31.26 24.036 Z M 126.355 24.036 L 139.38 24.036 A 10.634 10.634 0 0 0 138.963 21.791 A 7.638 7.638 0 0 0 137.634 19.229 Q 136.104 17.375 133.633 17.375 A 9.83 9.83 0 0 0 131.483 17.596 Q 130.039 17.92 128.991 18.719 A 5.666 5.666 0 0 0 128.047 19.631 A 6.478 6.478 0 0 0 127.089 21.241 Q 126.772 21.987 126.564 22.892 A 13.759 13.759 0 0 0 126.355 24.036 Z"
              vector-effect="non-scaling-stroke"></path>
          </g>
        </svg>
      </div>

      <label
        aria-label="Hamburger Menu"
        id="nav-toggle"
        class="btn btn-circle swap swap-rotate fixed z-[999] top-4 right-4 hidden"
        aria-controls="primary-nav"
        aria-expanded="false"
      >
        <input type="checkbox" />
        <!-- hamburger icon -->
        <svg
          class="swap-off fill-current"
          xmlns="http://www.w3.org/2000/svg"
          width="32"
          height="32"
          viewBox="0 0 512 512"
        >
          <path
            d="M64,384H448V341.33H64Zm0-106.67H448V234.67H64ZM64,128v42.67H448V128Z"
          ></path>
        </svg>
        <!-- close icon -->
        <svg
          class="swap-on fill-current"
          xmlns="http://www.w3.org/2000/svg"
          width="32"
          height="32"
          viewBox="0 0 512 512"
        >
          <polygon
            points="400 145.49 366.51 112 256 222.51 145.49 112 112 145.49 222.51 256 112 366.51 145.49 400 256 289.49 366.51 400 400 366.51 289.49 256 400 145.49"
          ></polygon>
        </svg>
      </label>

      <nav class="mr-6">
        <ul
          id="primary-nav"
          class="flex grow gap-8 items-center justify-center z-[100]"
          data-visible="false"
        >
          {
            navLinks.map((ele) => (
              <NavListItem
                navLink={ele.link}
                activeLink={activeLink}
                icon={ele.icon}
              />
            ))
          }
          <li>
            <!-- Theme, Light/Dark mode -->
            <label
              id="themeSetting"
              class="swap swap-rotate"
              aria-label="Theme"
            >
              <!-- this hidden checkbox controls the state -->

              <input type="checkbox" aria-labelledby="Theme" />
              <!-- sun icon -->
              <svg
                data-set-theme="cmyk"
                data-act-class="ACTIVECLASS"
                class="swap-on fill-current w-6 h-6"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
              >
                <path
                  d="M5.64,17l-.71.71a1,1,0,0,0,0,1.41,1,1,0,0,0,1.41,0l.71-.71A1,1,0,0,0,5.64,17ZM5,12a1,1,0,0,0-1-1H3a1,1,0,0,0,0,2H4A1,1,0,0,0,5,12Zm7-7a1,1,0,0,0,1-1V3a1,1,0,0,0-2,0V4A1,1,0,0,0,12,5ZM5.64,7.05a1,1,0,0,0,.7.29,1,1,0,0,0,.71-.29,1,1,0,0,0,0-1.41l-.71-.71A1,1,0,0,0,4.93,6.34Zm12,.29a1,1,0,0,0,.7-.29l.71-.71a1,1,0,1,0-1.41-1.41L17,5.64a1,1,0,0,0,0,1.41A1,1,0,0,0,17.66,7.34ZM21,11H20a1,1,0,0,0,0,2h1a1,1,0,0,0,0-2Zm-9,8a1,1,0,0,0-1,1v1a1,1,0,0,0,2,0V20A1,1,0,0,0,12,19ZM18.36,17A1,1,0,0,0,17,18.36l.71.71a1,1,0,0,0,1.41,0,1,1,0,0,0,0-1.41ZM12,6.5A5.5,5.5,0,1,0,17.5,12,5.51,5.51,0,0,0,12,6.5Zm0,9A3.5,3.5,0,1,1,15.5,12,3.5,3.5,0,0,1,12,15.5Z"
                ></path>
              </svg>
              <!-- moon icon -->
              <svg
                data-set-theme="night"
                data-act-class="ACTIVECLASS"
                class="swap-off fill-current w-6 h-6"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
              >
                <path
                  d="M21.64,13a1,1,0,0,0-1.05-.14,8.05,8.05,0,0,1-3.37.73A8.15,8.15,0,0,1,9.08,5.49a8.59,8.59,0,0,1,.25-2A1,1,0,0,0,8,2.36,10.14,10.14,0,1,0,22,14.05,1,1,0,0,0,21.64,13Zm-9.5,6.69A8.14,8.14,0,0,1,7.08,5.22v.27A10.15,10.15,0,0,0,17.22,15.63a9.79,9.79,0,0,0,2.1-.22A8.11,8.11,0,0,1,12.14,19.73Z"
                ></path>
              </svg>
            </label>
          </li>
        </ul>
      </nav>
    </header>

    <main id="main" class="container mx-auto">
      <slot />
    </main>

    <svg
      xmlns="http://www.w3.org/2000/svg"
      id="scrollButton"
      viewBox="0 0 512 512"
      class="w-10 h-10 fill-primary fixed bottom-5 right-5 animate-[jump_1500ms_infinite] cursor-pointer bg-base-100 rounded-full"
      style="display: none"
    >
      <path
        d="M256 0C114.6 0 0 114.6 0 256c0 141.4 114.6 256 256 256s256-114.6 256-256C512 114.6 397.4 0 256 0zM382.6 254.6c-12.5 12.5-32.75 12.5-45.25 0L288 205.3V384c0 17.69-14.33 32-32 32s-32-14.31-32-32V205.3L174.6 254.6c-12.5 12.5-32.75 12.5-45.25 0s-12.5-32.75 0-45.25l103.1-103.1C241.3 97.4 251.1 96 256 96c4.881 0 14.65 1.391 22.65 9.398l103.1 103.1C395.1 221.9 395.1 242.1 382.6 254.6z"
      ></path>
    </svg>

    <footer class="border-t px-4 py-6 mt-6">
      <p class="text-center text-sm">
        &copy; {new Date().getFullYear()}
        {authorName}
      </p>
    </footer>
    <style>
      html {
        --svg-totalLength: 844;
      }

      html[data-theme="night"] {
        --fill-color: 142 72% 29%;
        --stroke-color: 217 33% 17%;
        --hamburger-bg: 0 0% 30%;
        color-scheme: dark;
      }

      html[data-theme="cmyk"] {
        --fill-color: 173 80% 40%;
        --stroke-color: 213 27% 84%;
        --hamburger-bg: 0 0% 70%;
        color-scheme: light;
      }

      /* Mobile Navigation */
      @media (max-width: 640px) {
        ul#primary-nav {
          position: fixed;
          inset: 0 0 0 30%;
          flex-direction: column;
          padding: min(30vh, 10rem) 2em;
          transform: translateX(100%);
          transition: transform 500ms ease-in-out;
          background: hsl(var(--hamburger-bg) / 0.5);
          backdrop-filter: blur(2rem);
        }

        ul#primary-nav[data-visible="true"] {
          transform: translateX(0);
        }

        label#nav-toggle {
          display: grid;
        }
      }

      /* Logo & Theme SVG color */
      header path {
        fill: hsl(var(--fill-color));
      }
      header polygon {
        fill: hsl(var(--er));
      }

      /* Logo Animation */
      header > div > svg > path {
        stroke-dasharray: var(--svg-totalLength);
        stroke-dashoffset: var(--svg-totalLength);
        animation: logoAnimation 5s forwards ease-in-out;
        paint-order: stroke;
      }

      @keyframes logoAnimation {
        from {
          fill: hsl(var(--fill-color) / 0.1);
          stroke: hsl(var(--stroke-color));
        }

        to {
          stroke-dashoffset: 0;
          fill: hsl(var(--fill-color));
          stroke: hsl(var(--stroke-color) / 0);
        }
      }
    </style>

    <style is:global>
      ::selection {
        background-color: hsl(var(--a));
        color: hsl(var(--ac));
      }

      /* Scrollbar */
      ::-webkit-scrollbar {
        width: auto;
      }

      ::-webkit-scrollbar-track {
        background-color: hsl(var(--b3));
        border-radius: 100vmax;
        margin: 0.25rem;
      }

      ::-webkit-scrollbar-thumb {
        background-color: hsl(var(--bc));
        border-radius: 100vmax;
      }

      ::-webkit-scrollbar-thumb:hover {
        background-color: hsl(var(--bc) / 0.7);
        border-radius: 100vmax;
      }

      @supports (scrollbar-color: black white) {
        * {
          scrollbar-color: hsl(var(--bc)) hsl(var(--b3));
        }
      }
    </style>
    <script type="module">
      // import "@components/CodeSnippet/CopyCodeButton/create-copy-button.js";
    </script>

    <script>
      import "@components/CodeSnippet/CopyCodeButton/create-copy-button.js";
      import "@components/CodeSnippet/CopyCodeButton/copy-code-button.js";
      // Navigation / Hamburger menu - control
      const nav = document.querySelector<HTMLUListElement>("#primary-nav");
      const navToggle = document.querySelector<HTMLLabelElement>("#nav-toggle");
      const navToggleInput =
        document.querySelector<HTMLInputElement>("#nav-toggle input");

      navToggle.addEventListener("change", () => {
        if (nav.getAttribute("data-visible") === "false") {
          nav.setAttribute("data-visible", "true");
          nav.setAttribute("aria-expanded", "true");
        } else if (nav.getAttribute("data-visible") === "true") {
          nav.setAttribute("data-visible", "false");
          nav.setAttribute("aria-expanded", "false");
        }
      });

      document.querySelector("main").addEventListener("click", () => {
        if (nav.getAttribute("data-visible") === "true") {
          nav.setAttribute("data-visible", "false");
          nav.setAttribute("aria-expanded", "false");
          navToggleInput.checked = !navToggleInput.checked;
        }
      });

      // Scroll To Top button - control
      const scrollButton = document.querySelector<SVGElement>("#scrollButton");
      scrollButton.addEventListener("click", () => {
        window.scroll({
          top: 0,
          left: 0,
          behavior: "smooth",
        });
      });
      window.addEventListener("scroll", () => {
        if (document.documentElement.scrollTop > window.innerHeight / 4) {
          scrollButton.style.display = "block";
        } else {
          scrollButton.style.display = "none";
        }
      });

      // Theme stuff
      import { themeChange } from "theme-change";
      themeChange();
      if (
        localStorage["theme"] === "cmyk" ||
        document.querySelector("html").getAttribute("data-theme") === "cmyk"
      ) {
        document.querySelector<HTMLInputElement>(
          "#themeSetting > input"
        ).checked = true;
      }
    </script>
  </body>
</html>
